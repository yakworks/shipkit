#!/usr/bin/env bash

##
# @name make_shell
# @brief a wrapper around the shell that make targets will use for commands.
# ================================================================================
# Allows for having certain things sourced. also allows to easily trace and log
# set in the Makefile like so
# ~~~bash
# SHELL := $(SHIPKIT_BIN)/make_shell
# ~~~

set -euo pipefail # strict mode https://bit.ly/36MvF0T
source "$(dirname "${BASH_SOURCE[0]}")"/core/main
core.import "logit"
core.import "utils"

# its will usually have the -c passed from make
if [  "$1" == "-c" ] ; then
    shift
fi
# shellcheck disable=SC2124
target_cmds="$@"

# if verbose is set then kick the commands to the console
if [[ ${VERBOSE:-} = "true" ]]; then
  # pretty print to console
  [ "${MAKE_TARGET:-}" ] && TARG_NAME="[${MAKE_TARGET}]"
  printf "\e[33m------ make_shell %s------ \e[0m\n" "${TARG_NAME:-} "
  echo "$target_cmds"
  printf "\e[33m------------------------- \e[0m\n\n"
  # also turn on log and kick to file
  export LOGIT_DEBUG_ENABLED=true
  # the following will kick out all declared evn variables so stdout
  # ( set -o posix ; set )
fi

if [[ ${LOGIT_DEBUG_ENABLED:-} = "true" ]]; then
  logit.debug "$target_cmds"
fi

# strace -f -o `mktemp $RESULTZ/result_XXXXXXX` -e trace=open,stat64,execve,exit_group,chdir /bin/sh -c "$@"  | awk '{if (match("Process PID=\d+ runs in (64|32) bit",$0) == 0) {print $0}}'
eval "$target_cmds"
